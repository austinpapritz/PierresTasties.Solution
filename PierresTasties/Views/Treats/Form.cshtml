@{
    ViewData["Title"] = "Treat Form";
}

@model Treat

<h3>@ViewData["Title"]</h3>

<form asp-action="@ViewBag.FormAction" asp-controller="Treats" method="post">
    @Html.AntiForgeryToken()

    @* If form is being used to edit, then attach the TreatId to model. *@
    @if (Model != null && Model.TreatId != 0)
    {
        @Html.HiddenFor(m => m.TreatId)
    }

    @* Name *@
    <div class="form-group">   
        <label asp-for="Name" class="control-label">Name: </label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    @* Description *@
    <div class="form-group">   
        <label asp-for="Description" class="control-label">Description: </label>
        <input asp-for="Description" class="form-control" />
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    @* Flavor 1 (required) *@
    <div class="form-group">
        <label for="flavorId1" class="control-label">Flavor 1: </label>
        <select name="flavorId1" class="form-control" required>
            <option value="">-- Select Flavor --</option>
            @* Loop thru `Flavors` to populate dropdown menu. *@
            @foreach (var flavorOption in ViewBag.Flavors as SelectList)
            {
                // If this form is for `Create`, then `SelectedFlavor1` will be null.
                // If this form is for `Edit`, then one of the flavors will match `SelectedFlavor1`
                if (ViewBag.SelectedFlavor1 != null && flavorOption.Value == ViewBag.SelectedFlavor1.ToString())
                {
                    // This will pre-select the treat's 1st flavor, if this form is for `Edit`.
                    <option value="@flavorOption.Value" selected>@flavorOption.Text</option>
                }
                else
                {
                    // In any other case, just create a regular option with the flavor's name and value.
                    <option value="@flavorOption.Value">@flavorOption.Text</option>
                }
            }
        </select>
    </div>

    @* Flavor 2 (not required) *@
    <div class="form-group">
        <label for="flavorId2" class="control-label">Flavor 2: </label>
        <select name="flavorId2" class="form-control">
            <option value="">-- Select Flavor --</option>
            @* Loop thru `Flavors` to populate dropdown menu. *@
            @foreach (var flavorOption in ViewBag.Flavors as SelectList)
            {
                // If this form is for `Create`, then `SelectedFlavor1` will be null.
                // Even if this form is for `Edit`, some treats do not have a 2nd flavor. 
                if (ViewBag.SelectedFlavor2 != null && flavorOption.Value == ViewBag.SelectedFlavor2.ToString())
                {
                    // Assuming `Edit` and treat has a 2nd flavor, pre-select it in the dropdown.
                    <option value="@flavorOption.Value" selected>@flavorOption.Text</option>
                }
                else
                {
                    // In any other case, just create a regular option with the flavor's name and value.
                    <option value="@flavorOption.Value">@flavorOption.Text</option>
                }
            }
        </select>
    </div>

    <div class="form-group">
        <input type="submit" value="@ViewBag.SubmitButton" class="btn btn-primary" />
    </div>
</form>

<p>@Html.ValidationSummary(true, "", new { @class="text-danger" })</p>